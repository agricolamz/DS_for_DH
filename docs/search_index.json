[
["functions.html", "8 Собственные функции и использование их в tidyverse 8.1 Напоминание: логические операции 8.2 Использование условий в tidyverse 8.3 Создание собственных функций 8.4 Reinvent the map function", " 8 Собственные функции и использование их в tidyverse library(tidyverse) 8.1 Напоминание: логические операции Логическое “и”: &amp; TRUE FALSE TRUE TRUE FALSE FALSE FALSE FALSE TRUE &amp; TRUE ## [1] TRUE TRUE &amp; FALSE ## [1] FALSE Логическое “или”: | TRUE FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE | TRUE ## [1] TRUE TRUE | FALSE ## [1] TRUE Логическое “не”: !TRUE ## [1] FALSE Сравнение: 2 == 2 ## [1] TRUE 2 == 3 ## [1] FALSE 2 != 3 ## [1] TRUE 2 != c(2, 3) ## [1] FALSE TRUE 8.2 Использование условий в tidyverse 8.2.1 Условия в строчках Мы уже визуализировали данные из статьи на Pudding про английские пабы. Часть названий этих пабов имеет слово \"Inn\", давайте построим график распределения 30 самых популярных пабов с этим словом в названии и без него. Используя изветсные нам инструменты можно получить что-то в этом роде: uk_pubs &lt;- read_csv(&quot;https://raw.githubusercontent.com/agricolamz/DS_for_DH/master/data/UK_pubs.csv&quot;) uk_pubs %&gt;% count(pub_name, sort = TRUE) %&gt;% mutate(inn = str_detect(pub_name, &quot;Inn&quot;)) %&gt;% group_by(inn) %&gt;% slice(1:30) %&gt;% ggplot(aes(fct_reorder(pub_name, n), n))+ geom_col()+ coord_flip()+ facet_wrap(~inn, scale = &quot;free&quot;)+ labs(x = &quot;&quot;, y = &quot;&quot;, caption = &quot;https://pudding.cool/2019/10/pubs/&quot;) Получилось в целом то, что мы хотели, однако названия TRUE и FALSE не самые удачные. Исправить положение можно при помощи функции ifelse(), у которой три аргумента: условие, значение, если условие принимает значение TRUE, значение, если условие принимает значение FALSE. ifelse(2+2 == 4, &quot;правильно&quot;, &quot;неправильно&quot;) ## [1] &quot;правильно&quot; ifelse(2+2 == 5, &quot;правильно&quot;, &quot;неправильно&quot;) ## [1] &quot;неправильно&quot; Вставим эту функцию в уже написанные код: uk_pubs %&gt;% count(pub_name, sort = TRUE) %&gt;% mutate(inn = ifelse(str_detect(pub_name, &quot;Inn&quot;), &quot;with &#39;inn&#39;&quot;, &quot;without &#39;inn&#39;&quot;)) %&gt;% group_by(inn) %&gt;% slice(1:30) %&gt;% ggplot(aes(fct_reorder(pub_name, n), n))+ geom_col()+ coord_flip()+ facet_wrap(~inn, scale = &quot;free&quot;)+ labs(x = &quot;&quot;, y = &quot;&quot;, caption = &quot;https://pudding.cool/2019/10/pubs/&quot;) А что если условий больше? В целом выражение ifelse() можно вложить в выражение ifelse(), однако для таких случаев придумали функцию case_when(). У нее немного необычный синтаксис: case_when( условие 1 ~ значение x, условие 2 ~ значение y, ... условие n ~ значение z ) 8.2.2 Условия в столбцах mutate_at() mutate_if() 8.3 Создание собственных функций 8.4 Reinvent the map function "]
]
