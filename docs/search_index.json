[
["работа-со-временем-lubridate.html", "11 Работа со временем: lubridate 11.1 lubridate", " 11 Работа со временем: lubridate library(tidyverse) Мы обсуждали, что переменные бывают разные. О них, возможно, следует думать как о шкале: 11.1 lubridate Для работы со временем в R написали пакет lubridate (https://rawgit.com/rstudio/cheatsheets/master/lubridate.pdf, туториал доступен здесь и по команде vignette(\"lubridate\")). Первые команды, которые нужно изучить: library(lubridate) ## ## Attaching package: &#39;lubridate&#39; ## The following object is masked from &#39;package:base&#39;: ## ## date today() ## [1] &quot;2020-01-03&quot; now() ## [1] &quot;2020-01-03 02:02:42 MSK&quot; Как видно, из этих функций в R можно работать как с датами, так и с временем. В качестве иллюстрации мы будем использовать датасет flights из пакета nycflights13, в котором содержатся данные по полетам из Нью Йорка в 2013. library(nycflights13) flights 11.1.1 Создание даты Самый простой способ получить дату — это преобразовать строку в формат даты, для этого надо просто упорядочить y (year), m (month) и d (day) в команде: ymd(&quot;2020-01-21&quot;) ## [1] &quot;2020-01-21&quot; ymd(&quot;20-01-21&quot;) ## [1] &quot;2020-01-21&quot; ymd(&quot;20.01.21&quot;) ## [1] &quot;2020-01-21&quot; ymd(&quot;20/01/21&quot;) ## [1] &quot;2020-01-21&quot; ymd(&quot;200121&quot;) ## [1] &quot;2020-01-21&quot; mdy(&quot;January 21st, 2020&quot;) ## [1] &quot;2020-01-21&quot; dmy(&quot;21-Jan-2020&quot;) ## [1] &quot;2020-01-21&quot; Команды понимают не только английский (хоть и с трудом): dmy(&quot;21 янв 2020&quot;, locale = &quot;ru_RU.UTF-8&quot;) ## [1] &quot;2020-01-21&quot; dmy(&quot;21 янв. 2020&quot;, locale = &quot;ru_RU.UTF-8&quot;) ## [1] &quot;2020-01-21&quot; dmy(&quot;21 ян 2020&quot;, locale = &quot;ru_RU.UTF-8&quot;) ## Warning: All formats failed to parse. No formats found. ## [1] NA dmy(&quot;21 янва 2020&quot;, locale = &quot;ru_RU.UTF-8&quot;) ## [1] &quot;2020-01-21&quot; dmy(&quot;21 января 2020&quot;, locale = &quot;ru_RU.UTF-8&quot;) ## Warning: 1 failed to parse. ## [1] NA dmy(&quot;21 январь 2020&quot;, locale = &quot;ru_RU.UTF-8&quot;) ## [1] &quot;2020-01-21&quot; dmy(&quot;21 Январь 2020&quot;, locale = &quot;ru_RU.UTF-8&quot;) ## [1] &quot;2020-01-21&quot; Также существует команда make_datetime(), которая позволяет сделать дату из нескольких переменных: flights %&gt;% select(minute, hour, day, month, year) %&gt;% mutate(departure = make_datetime(year, month, day, hour, minute)) %&gt;% select(departure) Страница Левады центра df &lt;- read_csv(&quot;data/2019.01_levada_countries.csv&quot;) ## Parsed with column specification: ## cols( ## date = col_character(), ## good = col_double(), ## bad = col_double(), ## no_answer = col_double(), ## towards = col_character() ## ) ## Bad graph df %&gt;% group_by(towards) %&gt;% mutate(date = factor(date, levels = date)) %&gt;% pivot_longer(names_to = &quot;answer&quot;, values_to = &quot;number&quot;, good:no_answer) %&gt;% ggplot(aes(date, number, color = answer, group = answer))+ geom_line()+ facet_wrap(~towards, scales = &quot;free&quot;)+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) ## Warning in mutate_impl(.data, dots, caller_env()): Unequal factor levels: ## coercing to character ## Warning in mutate_impl(.data, dots, caller_env()): binding character and factor ## vector, coercing into character vector ## Warning in mutate_impl(.data, dots, caller_env()): binding character and factor ## vector, coercing into character vector ## Warning in mutate_impl(.data, dots, caller_env()): binding character and factor ## vector, coercing into character vector ## Warning in mutate_impl(.data, dots, caller_env()): binding character and factor ## vector, coercing into character vector ## Warning in mutate_impl(.data, dots, caller_env()): binding character and factor ## vector, coercing into character vector ## Warning in mutate_impl(.data, dots, caller_env()): binding character and factor ## vector, coercing into character vector # Good graph df %&gt;% mutate(date = str_c(&quot;1-&quot;, date), date = dmy(date)) %&gt;% pivot_longer(names_to = &quot;answer&quot;, values_to = &quot;number&quot;, good:no_answer) %&gt;% ggplot(aes(date, number, color = answer))+ geom_line()+ facet_wrap(~towards, scales = &quot;free&quot;) ## Warning: 15 failed to parse. ## Warning: Removed 18 rows containing missing values (geom_path). "]
]
