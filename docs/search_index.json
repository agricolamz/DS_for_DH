[
["корреляция-и-регрессия.html", "16 Корреляция и регрессия 16.1 Дисперсия и стандартное отклонение 16.2 Ковариация 16.3 Корреляция 16.4 Регрессионный анализ", " 16 Корреляция и регрессия 16.1 Дисперсия и стандартное отклонение Дисперсия — мера разброса значений наблюдений относительно среднего. \\[\\sigma^2_X = \\frac{\\sum_{i = 1}^n(x_i - \\bar{x})^2}{n - 1},\\] где \\(x_1, ..., x_n\\) — наблюдения; \\(\\bar{x}\\) — среднее всех наблюдений; \\(X\\) — вектор всех наблюдений; \\(n\\) — количество наблюдений. Представим, что у нас есть следующие данные: Тогда дисперсия — это сумма квадратов расстояний от каждой точки до среднего выборки (пунктирная линия) разделенное на количество наблюдений - 1 (по духу эта мера — обычное среднее, но если вас инетересует разница смещенной и несмещенной оценки дисперсии, см. видео). Для того, чтобы было понятнее, что такое дисперсия, давайте рассмотрим несколько расспределений с одним и тем же средним, но разными дисперсиями: В R дисперсию можно посчитать при помощи функции var(). set.seed(42) x &lt;- rnorm(20, mean = 50, sd = 10) var(x) ## [1] 172.2993 Проверим, что функция выдает то же, что мы записали в формуле. var(x) == sum((x - mean(x))^2)/(length(x)-1) ## [1] TRUE Так как дисперсия является квадратом отклонения, то часто вместо нее используют стандартное отклонение \\(\\sigma\\) — корень из дисперсии. В R ее можно посчитать при помощи функции sd(): sqrt(var(x)) ## [1] 13.12628 sd(x) ## [1] 13.12628 16.2 Ковариация Ковариация — эта мера ассоциации двух переменных. \\[cov(X, Y) = \\frac{\\sum_{i = 1}^n(x_i - \\bar{x})(y_i-\\bar{y})}{n - 1},\\] где \\((x_1, y_1), ..., (x_n, y_n)\\) — пары наблюдений; \\(\\bar{x}, \\bar{y}\\) — средние наблюдений; \\(X, Y\\) — векторы всех наблюдений; \\(n\\) — количество наблюдений. Представим, что у нас есть следующие данные: Тогда, согласно формуле, для каждой точки вычисляется следующая площадь (пуктирными линиями обозначены средние): Если значения \\(x_i\\) и \\(y_i\\) какой-то точки либо оба больше, либо оба меньше средних \\(\\bar{x}\\) и \\(\\bar{y}\\), то получившееся произведение будет иметь знак +, если же наоборот — знак -. На графике это показано цветом. Таким образом, если много красных прямоугольников, то значение суммы будет положительное и обозначать положительную связь (чем больше \\(x\\), тем больше \\(y\\)), а если будет много синий прямоугольников, то значение суммы отрицательное и обозначать положительную связь (чем больше \\(x\\), тем меньше \\(y\\)). Непосредственно значение ковариации не очень информативно, так как может достаточно сильно варьироваться от датасета к датасету. В R ковариацию можно посчитать при помощи функции cov(). set.seed(42) x &lt;- rnorm(10, mean = 50, sd = 10) y &lt;- x + rnorm(10, sd = 10) cov(x, y) ## [1] 18.72204 cov(x, -y*2) ## [1] -37.44407 Как видно, простое умножение на два удвоило значение ковариации, что показывает, что непосредственно ковариацию использовать для сравнения разных датасетов не стоит. Проверим, что функция выдает то же, что мы записали в формуле. cov(x, y) == sum((x-mean(x))*(y - mean(y)))/(length(x)-1) ## [1] TRUE 16.3 Корреляция 16.3.1 Корреляция Пирсона \\[\\rho_{X,Y} = \\frac{cov(X, Y)}{\\sigma_X\\times\\sigma_Y} = \\frac{\\sum_{i = 1}^n(x_i - \\bar{x})(y_i-\\bar{y})}{\\sqrt{\\sum_{i = 1}^n(x_i - \\bar{x})^2\\times\\sum_{i = 1}^n(y_i - \\bar{y})^2}},\\] где \\((x_1, y_1), ..., (x_n, y_n)\\) — пары наблюдений; \\(\\bar{x}, \\bar{y}\\) — средние наблюдений; \\(X, Y\\) — векторы всех наблюдений; \\(n\\) — количество наблюдений. cor(df$x, df$y) ## [1] 0.7114793 cov(df$x, df$y)/(sd(df$x)*sd(df$y)) ## [1] 0.7114793 df %&gt;% ggplot()+ geom_point(aes(x = x, y = y))+ geom_smooth(aes(x = x, y = y), method = &quot;lm&quot;, se = FALSE, color = &quot;red&quot;)+ geom_smooth(aes(x = y, y = x), method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula &#39;y ~ x&#39; ## `geom_smooth()` using formula &#39;y ~ x&#39; lm(df$x~df$y) ## ## Call: ## lm(formula = df$x ~ df$y) ## ## Coefficients: ## (Intercept) df$y ## 16.4285 0.6104 lm(df$y~df$x) ## ## Call: ## lm(formula = df$y ~ df$x) ## ## Coefficients: ## (Intercept) df$x ## 13.5346 0.8293 16.3.2 Ранговые корреляции Спирмана и Кендала 16.4 Регрессионный анализ https://antoinesoetewey.shinyapps.io/statistics-202/ "]
]
