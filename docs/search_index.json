[
["tidytext.html", "9 Работа с текстами: gutenbergr, tidytext, udpipe 9.1 Пакет gutenbergr 9.2 Библиотека tidytext 9.3 Пакет udpipe", " 9 Работа с текстами: gutenbergr, tidytext, udpipe library(tidyverse) 9.1 Пакет gutenbergr Пакет gutenbergr является API для очень старого проекта Guttenberg. library(gutenbergr) Все самое важное в этом пакете хранится в датасете gutenberg_metadata str(gutenberg_metadata) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 51997 obs. of 8 variables: ## $ gutenberg_id : int 0 1 2 3 4 5 6 7 8 9 ... ## $ title : chr NA &quot;The Declaration of Independence of the United States of America&quot; &quot;The United States Bill of Rights\\r\\nThe Ten Original Amendments to the Constitution of the United States&quot; &quot;John F. Kennedy&#39;s Inaugural Address&quot; ... ## $ author : chr NA &quot;Jefferson, Thomas&quot; &quot;United States&quot; &quot;Kennedy, John F. (John Fitzgerald)&quot; ... ## $ gutenberg_author_id: int NA 1638 1 1666 3 1 4 NA 3 3 ... ## $ language : chr &quot;en&quot; &quot;en&quot; &quot;en&quot; &quot;en&quot; ... ## $ gutenberg_bookshelf: chr NA &quot;United States Law/American Revolutionary War/Politics&quot; &quot;American Revolutionary War/Politics/United States Law&quot; NA ... ## $ rights : chr &quot;Public domain in the USA.&quot; &quot;Public domain in the USA.&quot; &quot;Public domain in the USA.&quot; &quot;Public domain in the USA.&quot; ... ## $ has_text : logi TRUE TRUE TRUE TRUE TRUE TRUE ... ## - attr(*, &quot;date_updated&quot;)= Date, format: &quot;2016-05-05&quot; Например, сейчас мы можем понять, сколько книг на разных языках можно скачать из проекта: gutenberg_metadata %&gt;% count(language, sort = TRUE) Как видно, в основном это тексты на английском. Сколько авторов в датасете? gutenberg_metadata %&gt;% count(author, sort = TRUE) Сколько произведений Джейн Остин (не перепутайте с другими Остин) есть в датасете? gutenberg_metadata %&gt;% filter(author == &quot;Austen, Jane&quot;) %&gt;% distinct(gutenberg_id, title) Давайте скачаем “Эмму”: emma &lt;- gutenberg_download(158) ## Determining mirror for Project Gutenberg from http://www.gutenberg.org/robot/harvest ## Using mirror http://aleph.gutenberg.org emma Можно скачивать сразу несколько книг. Давайте добавим еще “Леди Сьюзен”: books &lt;- gutenberg_download(c(158, 946), meta_fields = &quot;title&quot;) books books %&gt;% count(title) Сколько уникальных заголовков из базы данных содержит “Sherlock Holmes”? 9.2 Библиотека tidytext Сейчас скачанные книги записаны в таблицу, где одна строка это один абзац. Хочется мочь посчитать слова. Для этого книги нужно привести в tidy формат и для этого написан пакет tidytext (онлайн книга доступна здесь): library(tidytext) books %&gt;% unnest_tokens(word, text) Теперь можно посчитать самые частотные слова в обоих произведениях: books %&gt;% unnest_tokens(word, text) %&gt;% count(title, word, sort = TRUE) Ну… Это было ожидаемо. Нужно убрать стопслова. Английские стопслова встроены в пакет (переменная stop_words): books %&gt;% unnest_tokens(word, text) %&gt;% count(title, word, sort = TRUE) %&gt;% anti_join(stop_words) ## Joining, by = &quot;word&quot; Постройте следующий график, на котором представлены самые частотные 20 слов каждого из произведений. ## Joining, by = &quot;word&quot; Функция unnest_tokens() позволяет работать не только со словами, но и, напрмиер, с биграммами: books %&gt;% unnest_tokens(word, text, token = &quot;ngrams&quot;, n = 2) Поиск самых частотных слов — не едиснственная задача, которую можно решать при работе с текстом. Иногда имеет смысл узнать распределение слов в произведении. Давайте посмотрим как распределены в романе “Эмма” фамилии главных героев: books %&gt;% filter(title == &quot;Emma&quot;) %&gt;% unnest_tokens(word, text) %&gt;% mutate(narrative_time = 1:n()) %&gt;% filter(str_detect(word, &quot;knightley$|woodhouse$|churchill$|fairfax$&quot;)) %&gt;% ggplot()+ geom_vline(aes(xintercept = narrative_time))+ facet_wrap(~word, ncol = 1) 9.3 Пакет udpipe Пакет udpipe представляет лемматизацию, морфологический и синтаксический анализ разных языков. Туториал можно найти здесь, там же есть список доступных языков. library(udpipe) Модели качаются очень долго. enmodel &lt;- udpipe_download_model(language = &quot;english&quot;) ## Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.4/master/inst/udpipe-ud-2.4-190531/english-ewt-ud-2.4-190531.udpipe to /home/agricolamz/work/materials/2019_2020_ds4dh/class_materials/english-ewt-ud-2.4-190531.udpipe ## Visit https://github.com/jwijffels/udpipe.models.ud.2.4 for model license details Теперь можно распарсить какое-нибудь предложение: udpipe(&quot;The want of Miss Taylor would be felt every hour of every day.&quot;, object = enmodel) Скачаем русскую модель: rumodel &lt;- udpipe_download_model(language = &quot;russian-syntagrus&quot;) ## Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.4/master/inst/udpipe-ud-2.4-190531/russian-syntagrus-ud-2.4-190531.udpipe to /home/agricolamz/work/materials/2019_2020_ds4dh/class_materials/russian-syntagrus-ud-2.4-190531.udpipe ## Visit https://github.com/jwijffels/udpipe.models.ud.2.4 for model license details udpipe(&quot;Жила-была на свете крыса в морском порту Вальпараисо, на складе мяса и маиса, какао и вина.&quot;, object = rumodel) После того, как модель загружена можно уже к ней обращаться просто по имени: udpipe(&quot;Жила-была на свете крыса в морском порту Вальпараисо, на складе мяса и маиса, какао и вина.&quot;, object = &quot;russian-syntagrus-ud-2.4-190531.udpipe&quot;) "]
]
