[
["методы-уменьшения-размерностей.html", "18 Методы уменьшения размерностей 18.1 Визуализация многомерных пространств 18.2 Простой пример: из двумерного пространства в одномерное пространство 18.3 Многомерное шкалирование 18.4 Метод главных компонент 18.5 Множественный анализ соответствий 18.6 Другие методы уменьшения размерности", " 18 Методы уменьшения размерностей library(tidyverse) Методы уменьшения размерностей – это эксплораторные методы, которые позволяет использовать меньше переменных для того, чтобы найти связи в данных и связи между переменными. Немножко жаргона: размерность здесь является прямым аналогом размерности в описании физических объектов (например, 2-ухмерное, 3-ехмерное, 4-ехмерное и т. д. пространство). Важно понимать, что каждая переменная в любом датасете можно воспринимать как отдельную размерность, так что каждая строчка в датасете mtcars – объект в 11-мерном пространстве просто потому что в этом датасете 11 переменных. 18.1 Визуализация многомерных пространств Визуализация многомерного пространства — дело сложное. Когда переменных не так уж и много, то в целом данную задачу можно решить используя разные трюки: много диаграмм рассеяния library(GGally) ggpairs(mtcars) радиальная диаграмма (радар, паук) mtcars %&gt;% mutate(car_names = rownames(mtcars)) %&gt;% pivot_longer(names_to = &quot;variables&quot;, values_to = &quot;values&quot;, mpg:carb) %&gt;% mutate(variables = factor(variables, levels = colnames(mtcars))) %&gt;% ggplot(aes(variables, values, color = car_names, group = car_names))+ geom_point()+ geom_polygon(fill = NA)+ ggproto(&quot;CordRadar&quot;, CoordPolar, theta = &quot;x&quot;, r = &quot;x&quot;, start = 0, direction = 1, is_linear = function(coord) TRUE) Не очень видно. Давайте нормализуем переменные: mtcars %&gt;% mutate_all(scale) %&gt;% mutate(car_names = rownames(mtcars)) %&gt;% pivot_longer(names_to = &quot;variables&quot;, values_to = &quot;values&quot;, mpg:carb) %&gt;% mutate(variables = factor(variables, levels = colnames(mtcars))) %&gt;% ggplot(aes(variables, values, color = car_names, group = car_names))+ geom_point()+ geom_polygon(fill = NA)+ ggproto(&quot;CordRadar&quot;, CoordPolar, theta = &quot;x&quot;, r = &quot;x&quot;, start = 0, direction = 1, is_linear = function(coord) TRUE) Все равно не очень хорошо видно, давайте сделаем фасетизацию: mtcars %&gt;% mutate_all(scale) %&gt;% mutate(car_names = rownames(mtcars)) %&gt;% pivot_longer(names_to = &quot;variables&quot;, values_to = &quot;values&quot;, mpg:carb) %&gt;% mutate(variables = factor(variables, levels = colnames(mtcars))) %&gt;% ggplot(aes(variables, values, group = car_names, color = car_names))+ geom_point(show.legend = FALSE)+ geom_polygon(fill = NA, show.legend = FALSE)+ facet_wrap(~car_names)+ ggproto(&quot;CordRadar&quot;, CoordPolar, theta = &quot;x&quot;, r = &quot;x&quot;, start = 0, direction = 1, is_linear = function(coord) TRUE) 18.2 Простой пример: из двумерного пространства в одномерное пространство Мы уже рассматривали связь между количество слов в рассказе и количеством слов и в рассказах М. Зощенко: read_tsv(&quot;https://github.com/agricolamz/DS_for_DH/raw/master/data/tidy_zoshenko.csv&quot;) %&gt;% filter(word == &quot;и&quot;, n_words &lt; 1500) %&gt;% distinct() -&gt; zo ## Parsed with column specification: ## cols( ## titles = col_character(), ## word = col_character(), ## n = col_double(), ## n_words = col_double() ## ) zo %&gt;% ggplot(aes(n_words, n))+ geom_point()+ labs(x = &quot;количество слов в рассказе&quot;, y = &quot;количество и&quot;) Мы уже смотрели коэффициент корреляции между этими переменными (r = 0.83). 18.3 Многомерное шкалирование Многомерное шкалирование – преобразование из многомерного пространства в n-мерное пространство (чаще всего смотрят на n равное 2), которое старается как можно меньше исказить расстояния между наблюдениями. iris %&gt;% select(-Species) %&gt;% dist() %&gt;% cmdscale() %&gt;% as_tibble() %&gt;% bind_cols(iris) %&gt;% ggplot(aes(V1, V2, color = Species))+ geom_point() ## Warning: The `x` argument of `as_tibble.matrix()` must have column names if `.name_repair` is omitted as of tibble 2.0.0. ## Using compatibility `.name_repair`. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_warnings()` to see where this warning was generated. Если по какой-то причине вы хотите использовать большую размерность итогового пространства, можно использовать аргумент k функции cmdscale() (по умолчанию он 2). Как видно из кода, я использовал функцию dist(), которую мы видели в предыдущем разделе: мы можем использовать любую другую матрицу расстояний, которую мы посчитаем. Давайте, например, посмотрим на многомерное шкалирование расстояний Левинштейна-Димерау между стопсловами русского языка: library(stringdist) library(stopwords) stringdistmatrix(stopwords(&quot;ru&quot;)) %&gt;% cmdscale() %&gt;% as_tibble() %&gt;% mutate(words = stopwords(&quot;ru&quot;)) %&gt;% ggplot(aes(V1, V2, label = words))+ geom_text() Как интерпретировать получившийся график? Часто мы не можем придать никакого значения получившимся осям, однако расстояния между точками на графике призвано отражать расстояние в многомерном пространстве. Так что, используя многомерное шкалирование можно обнаружить, есть ли кластеры в многомерных данных можно обнаружить, есть ли связь между наблюдениями, в том числе невыраженная переменными, которые есть в датасете. Например, из графика со стопсловами, видна “скрытая” переменная – длина слова. 18.4 Метод главных компонент library(broom) iris %&gt;% select(-Species) %&gt;% prcomp() %&gt;% augment(iris) %&gt;% ggplot(aes(.fittedPC1, .fittedPC2, color = Species))+ geom_point() В целом, эта картинка ничем не отличается от полученной нам в многомерном шкалировании (плсю-минус зеркальное отображение; так будет каждый раз, если при построении многомерного шкалирования использовано евклидово расстояние). В отличие от многомерного шкалирования, метод главных компонент позволяет также посмотреть на процент объясненной дисперсии: iris %&gt;% select(-Species) %&gt;% prcomp() %&gt;% summary() ## Importance of components: ## PC1 PC2 PC3 PC4 ## Standard deviation 2.0563 0.49262 0.2797 0.15439 ## Proportion of Variance 0.9246 0.05307 0.0171 0.00521 ## Cumulative Proportion 0.9246 0.97769 0.9948 1.00000 Ученые (к счастью) не договорились относительно порога, начиная с которого процент объясненной дисперсии является хорошим. Я обычно радуюсь значением больше 0.7 (т. е. при переходе к новым осям мы выкинули всего 30% дисперсии). Мы точно так же можем работать не только с данными, но и с матрицей расстояния: library(broom) st_words &lt;- tibble(words = stopwords(&quot;ru&quot;)) stringdistmatrix(st_words$words) %&gt;% prcomp() %&gt;% augment(st_words) %&gt;% ggplot(aes(.fittedPC1, .fittedPC2, label = words))+ geom_text() stringdistmatrix(st_words$words) %&gt;% prcomp() %&gt;% summary() ## Importance of components: ## PC1 PC2 PC3 PC4 PC5 PC6 PC7 ## Standard deviation 11.9772 3.69757 3.11365 2.5822 2.49378 2.20234 2.04804 ## Proportion of Variance 0.6433 0.06131 0.04347 0.0299 0.02789 0.02175 0.01881 ## Cumulative Proportion 0.6433 0.70460 0.74807 0.7780 0.80586 0.82761 0.84642 ## PC8 PC9 PC10 PC11 PC12 PC13 PC14 ## Standard deviation 1.88720 1.68806 1.66703 1.56338 1.4478 1.32334 1.21257 ## Proportion of Variance 0.01597 0.01278 0.01246 0.01096 0.0094 0.00785 0.00659 ## Cumulative Proportion 0.86239 0.87517 0.88763 0.89859 0.9080 0.91584 0.92244 ## PC15 PC16 PC17 PC18 PC19 PC20 PC21 ## Standard deviation 1.17782 1.11358 1.08772 1.01914 0.94048 0.92958 0.89460 ## Proportion of Variance 0.00622 0.00556 0.00531 0.00466 0.00397 0.00387 0.00359 ## Cumulative Proportion 0.92866 0.93422 0.93952 0.94418 0.94815 0.95202 0.95561 ## PC22 PC23 PC24 PC25 PC26 PC27 PC28 ## Standard deviation 0.88247 0.81636 0.78514 0.73669 0.72964 0.67365 0.66247 ## Proportion of Variance 0.00349 0.00299 0.00276 0.00243 0.00239 0.00203 0.00197 ## Cumulative Proportion 0.95910 0.96209 0.96486 0.96729 0.96968 0.97171 0.97368 ## PC29 PC30 PC31 PC32 PC33 PC34 PC35 ## Standard deviation 0.63643 0.58896 0.58082 0.5588 0.55032 0.5386 0.50206 ## Proportion of Variance 0.00182 0.00156 0.00151 0.0014 0.00136 0.0013 0.00113 ## Cumulative Proportion 0.97550 0.97705 0.97857 0.9800 0.98132 0.9826 0.98375 ## PC36 PC37 PC38 PC39 PC40 PC41 PC42 ## Standard deviation 0.48338 0.45811 0.44540 0.42407 0.40791 0.38894 0.38122 ## Proportion of Variance 0.00105 0.00094 0.00089 0.00081 0.00075 0.00068 0.00065 ## Cumulative Proportion 0.98480 0.98574 0.98663 0.98744 0.98819 0.98886 0.98952 ## PC43 PC44 PC45 PC46 PC47 PC48 PC49 ## Standard deviation 0.3651 0.35531 0.3354 0.33162 0.32008 0.3005 0.29282 ## Proportion of Variance 0.0006 0.00057 0.0005 0.00049 0.00046 0.0004 0.00038 ## Cumulative Proportion 0.9901 0.99068 0.9912 0.99168 0.99214 0.9925 0.99293 ## PC50 PC51 PC52 PC53 PC54 PC55 PC56 ## Standard deviation 0.28066 0.27603 0.26679 0.2574 0.25146 0.24704 0.23739 ## Proportion of Variance 0.00035 0.00034 0.00032 0.0003 0.00028 0.00027 0.00025 ## Cumulative Proportion 0.99328 0.99362 0.99394 0.9942 0.99452 0.99479 0.99505 ## PC57 PC58 PC59 PC60 PC61 PC62 PC63 ## Standard deviation 0.23323 0.22622 0.22321 0.22195 0.2115 0.20512 0.19986 ## Proportion of Variance 0.00024 0.00023 0.00022 0.00022 0.0002 0.00019 0.00018 ## Cumulative Proportion 0.99529 0.99552 0.99574 0.99597 0.9962 0.99635 0.99653 ## PC64 PC65 PC66 PC67 PC68 PC69 PC70 ## Standard deviation 0.19360 0.19316 0.18152 0.17921 0.17652 0.17345 0.17261 ## Proportion of Variance 0.00017 0.00017 0.00015 0.00014 0.00014 0.00013 0.00013 ## Cumulative Proportion 0.99670 0.99687 0.99702 0.99716 0.99730 0.99744 0.99757 ## PC71 PC72 PC73 PC74 PC75 PC76 PC77 ## Standard deviation 0.16601 0.16534 0.16205 0.16070 0.1518 0.1505 0.14443 ## Proportion of Variance 0.00012 0.00012 0.00012 0.00012 0.0001 0.0001 0.00009 ## Cumulative Proportion 0.99769 0.99782 0.99793 0.99805 0.9981 0.9982 0.99835 ## PC78 PC79 PC80 PC81 PC82 PC83 PC84 ## Standard deviation 0.14151 0.13889 0.13487 0.12909 0.12873 0.12679 0.12483 ## Proportion of Variance 0.00009 0.00009 0.00008 0.00007 0.00007 0.00007 0.00007 ## Cumulative Proportion 0.99844 0.99852 0.99861 0.99868 0.99875 0.99883 0.99890 ## PC85 PC86 PC87 PC88 PC89 PC90 PC91 ## Standard deviation 0.12038 0.11560 0.11313 0.11265 0.11044 0.10504 0.10420 ## Proportion of Variance 0.00006 0.00006 0.00006 0.00006 0.00005 0.00005 0.00005 ## Cumulative Proportion 0.99896 0.99902 0.99908 0.99914 0.99919 0.99924 0.99929 ## PC92 PC93 PC94 PC95 PC96 PC97 PC98 ## Standard deviation 0.09774 0.09558 0.09253 0.09116 0.08645 0.08454 0.08298 ## Proportion of Variance 0.00004 0.00004 0.00004 0.00004 0.00003 0.00003 0.00003 ## Cumulative Proportion 0.99933 0.99937 0.99941 0.99945 0.99948 0.99951 0.99954 ## PC99 PC100 PC101 PC102 PC103 PC104 PC105 ## Standard deviation 0.08048 0.07819 0.07791 0.07259 0.07112 0.07082 0.06731 ## Proportion of Variance 0.00003 0.00003 0.00003 0.00002 0.00002 0.00002 0.00002 ## Cumulative Proportion 0.99957 0.99960 0.99963 0.99965 0.99967 0.99970 0.99972 ## PC106 PC107 PC108 PC109 PC110 PC111 PC112 ## Standard deviation 0.06626 0.06434 0.06145 0.06026 0.05932 0.05715 0.05707 ## Proportion of Variance 0.00002 0.00002 0.00002 0.00002 0.00002 0.00001 0.00001 ## Cumulative Proportion 0.99974 0.99976 0.99977 0.99979 0.99980 0.99982 0.99983 ## PC113 PC114 PC115 PC116 PC117 PC118 PC119 ## Standard deviation 0.05616 0.05368 0.05113 0.04984 0.04694 0.04643 0.04570 ## Proportion of Variance 0.00001 0.00001 0.00001 0.00001 0.00001 0.00001 0.00001 ## Cumulative Proportion 0.99985 0.99986 0.99987 0.99988 0.99989 0.99990 0.99991 ## PC120 PC121 PC122 PC123 PC124 PC125 PC126 ## Standard deviation 0.04223 0.04138 0.04080 0.03810 0.03664 0.03283 0.03196 ## Proportion of Variance 0.00001 0.00001 0.00001 0.00001 0.00001 0.00000 0.00000 ## Cumulative Proportion 0.99992 0.99993 0.99994 0.99994 0.99995 0.99995 0.99996 ## PC127 PC128 PC129 PC130 PC131 PC132 PC133 ## Standard deviation 0.03173 0.03086 0.0298 0.02954 0.02713 0.02603 0.02326 ## Proportion of Variance 0.00000 0.00000 0.0000 0.00000 0.00000 0.00000 0.00000 ## Cumulative Proportion 0.99996 0.99997 1.0000 0.99997 0.99998 0.99998 0.99998 ## PC134 PC135 PC136 PC137 PC138 PC139 PC140 ## Standard deviation 0.02217 0.02033 0.01997 0.01944 0.01856 0.01792 0.01646 ## Proportion of Variance 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ## Cumulative Proportion 0.99999 0.99999 0.99999 0.99999 0.99999 0.99999 0.99999 ## PC141 PC142 PC143 PC144 PC145 PC146 PC147 ## Standard deviation 0.01553 0.0139 0.01349 0.01173 0.01 0.009278 0.008591 ## Proportion of Variance 0.00000 0.0000 0.00000 0.00000 0.00 0.000000 0.000000 ## Cumulative Proportion 1.00000 1.0000 1.00000 1.00000 1.00 1.000000 1.000000 ## PC148 PC149 PC150 PC151 PC152 PC153 ## Standard deviation 0.00715 0.006969 0.005831 0.005282 0.003554 0.003025 ## Proportion of Variance 0.00000 0.000000 0.000000 0.000000 0.000000 0.000000 ## Cumulative Proportion 1.00000 1.000000 1.000000 1.000000 1.000000 1.000000 ## PC154 PC155 PC156 PC157 PC158 PC159 ## Standard deviation 0.002048 0.0019 0.001179 0.0008043 0.0003666 5.257e-15 ## Proportion of Variance 0.000000 0.0000 0.000000 0.0000000 0.0000000 0.000e+00 ## Cumulative Proportion 1.000000 1.0000 1.000000 1.0000000 1.0000000 1.000e+00 18.5 Множественный анализ соответствий 18.6 Другие методы уменьшения размерности "]
]
